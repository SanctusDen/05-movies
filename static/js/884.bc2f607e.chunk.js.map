{"version":3,"file":"static/js/884.bc2f607e.chunk.js","mappings":"6MAgBA,EAbiB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GAEhCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKK,IAAG,UALG,mCAKH,OAAgBP,GAAeQ,IAAKT,IAC3CA,GAASA,EAAMU,UAAU,EAAG,QAHxBR,EAOZ,E,SCZYS,EAFMC,EAAQ,KAAnBC,OAEuBC,GAAV,qTCYrB,EAViB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,SAACJ,EAAD,UACGI,EAAOC,KAAI,gBAAGhB,EAAH,EAAGA,MAAOE,EAAV,EAAUA,GAAID,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAAmBD,MAAOA,EAAOC,YAAaA,EAAaC,GAAIA,GAAhDA,EADL,KAKjB,C,4ECVYe,EAAS,kBACpB,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,WANQ,C,2HCgCtB,UA5BqB,WACnB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOR,EAAP,KAAeW,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,6FACdL,GAAW,GADG,mBAGcM,EAAAA,EAAAA,IAAgBJ,GAH9B,gBAGJK,EAHI,EAGJA,QACRN,EAAUM,GAJE,gDAMZC,QAAQC,IAAI,KAAMC,SANN,yBAQZV,GAAW,GARC,4EAAH,qDAWbK,GACD,GAAE,CAACH,KAEF,4BACE,wBAAKA,IACJH,IAAW,SAAC,IAAD,IACXA,GAAU,SAAC,IAAD,CAAUY,MAAOrB,KAAa,SAAC,IAAD,MAG9C,C,sLC3BKsB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBb,EAAe,mCAAG,WAAM7B,GAAN,yFACNmC,EAASM,IAAT,iBAAuBzC,IADjB,uBACrB0C,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAU,mCAAG,WAAM7C,GAAN,yFACDmC,EAASM,IAAT,iBAAuBzC,EAAvB,aADC,uBAChB0C,EADgB,EAChBA,KADgB,kBAEjBA,EAAKI,MAFY,2CAAH,sDAKVC,EAAY,mCAAG,WAAM/C,GAAN,yFACHmC,EAASM,IAAT,iBAAuBzC,EAAvB,aADG,uBAClB0C,EADkB,EAClBA,KADkB,kBAEnBA,EAAKZ,SAFc,2CAAH,qD","sources":["components/HomeItem/HomeItem.jsx","components/HomeList/HomeList.styled.jsx","components/HomeList/HomeList.jsx","components/Loader/Loader.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomeItem = ({ title, poster_path, id }) => {\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w200';\n  const location = useLocation();\n  return (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={`${BASE_IMG}${poster_path}`} alt={title} />\n        {title && title.substring(0, 20)}\n      </Link>\n    </li>\n  );\n};\n\nexport default HomeItem;\n","const { styled } = require('styled-components');\n\nexport const ListHome = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  li {\n    width: 200px;\n    text-align: center;\n    list-style: none;\n  }\n  li > a {\n    color: #fff;\n    &:hover,\n    &:focus,\n    &:active {\n      color: #3fc9ff;\n      transition: all 400ms ease-in-out;\n    }\n  }\n`;\n","import HomeItem from 'components/HomeItem/HomeItem';\nimport React from 'react';\nimport { ListHome } from './HomeList.styled';\n\nconst HomeList = ({ movies }) => {\n  return (\n    <ListHome>\n      {movies.map(({ title, id, poster_path }) => (\n        <HomeItem key={id} title={title} poster_path={poster_path} id={id} />\n      ))}\n    </ListHome>\n  );\n};\n\nexport default HomeList;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"100\"\n    width=\"100\"\n    radius=\"9\"\n    color=\"#3fc9ff\"\n    ariaLabel=\"loading\"\n  />\n);\n","import HomeList from 'components/HomeList/HomeList';\nimport { Loader } from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAllDetails } from 'services/api';\n\nconst MovieDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const details = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchAllDetails(movieId);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId]);\n  return (\n    <div>\n      <h1>{movieId}</h1>\n      {loading && <Loader />}\n      {loading ? <HomeList movie={movies} /> : <Loader />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["title","poster_path","id","location","useLocation","to","state","from","src","alt","substring","ListHome","require","styled","ul","movies","map","Loader","height","width","radius","color","ariaLabel","useState","loading","setLoading","setMovies","movieId","useParams","useEffect","details","fetchAllDetails","results","console","log","message","movie","instance","axios","baseURL","params","api_key","fetchTrendMovies","get","data","fetchSerchMovies","query","fetchActor","cast","fetchReviews"],"sourceRoot":""}