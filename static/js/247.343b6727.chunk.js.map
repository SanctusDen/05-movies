{"version":3,"file":"static/js/247.343b6727.chunk.js","mappings":"2OAuDA,UA9Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,2FACdJ,GAAW,GADG,mBAGOK,EAAAA,EAAAA,IAAWJ,GAHlB,OAGNJ,EAHM,OAIZC,EAAQD,GAJI,gDAMZS,QAAQC,IAAI,KAAMC,SANN,yBAQZR,GAAW,GARC,4EAAH,qDAWbI,GACD,GAAE,CAACH,KAGF,UAAC,KAAD,WACGF,IAAW,SAAC,IAAD,KACZ,wBAAI,uBACHF,GACCA,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACP,4BACE,gBACEC,IACED,EAAY,0CAC2BA,GA5BnD,8EA+BUE,MAAO,IACPC,IAAI,YAGN,wBAAKJ,MAXGD,EADH,MAiBhB,C,sLCjDKM,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBG,EAAe,mCAAG,WAAMhB,GAAN,yFACNM,EAASM,IAAT,iBAAuBZ,IADjB,uBACrBa,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKflB,EAAU,mCAAG,WAAMK,GAAN,yFACDM,EAASM,IAAT,iBAAuBZ,EAAvB,aADC,uBAChBa,EADgB,EAChBA,KADgB,kBAEjBA,EAAK1B,MAFY,2CAAH,sDAKV8B,EAAY,mCAAG,WAAMjB,GAAN,yFACHM,EAASM,IAAT,iBAAuBZ,EAAvB,aADG,uBAClBa,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,SAFc,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["// import React from 'react';\n\n// import { Loader } from 'components/Loader/Loader';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActor } from 'services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const details = async () => {\n      setLoading(true);\n      try {\n        const cast = await fetchActor(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <h1>Cast of the movie!</h1>\n      {cast &&\n        cast.map(({ id, name, profile_path }) => (\n          <div key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : defaultImg\n              }\n              width={250}\n              alt=\"poster\"\n            />\n\n            <h2>{name}</h2>\n          </div>\n        ))}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","details","fetchActor","console","log","message","map","id","name","profile_path","src","width","alt","instance","axios","baseURL","params","api_key","fetchTrendMovies","get","data","fetchSerchMovies","query","fetchAllDetails","fetchReviews","results"],"sourceRoot":""}