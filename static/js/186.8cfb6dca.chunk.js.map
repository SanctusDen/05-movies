{"version":3,"file":"static/js/186.8cfb6dca.chunk.js","mappings":"2OAyCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,gFACdP,GAAW,GADG,mBAGcQ,EAAAA,EAAAA,IAAaD,GAH3B,gBAGJN,EAHI,EAGJA,QACRC,EAAWD,GAJC,gDAMZQ,QAAQC,IAAI,KAAMC,SANN,yBAQZX,GAAW,GARC,4EAAH,sDAWbM,GACD,GAAE,CAACH,KAGF,UAAC,KAAD,WACGJ,IAAW,SAAC,IAAD,KACZ,wBAAI,0BACHE,EAAQW,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,4BACE,wBAAKD,KACL,uBAAIC,MAFIP,EADC,MAQlB,C,sLClCKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBG,EAAe,mCAAG,WAAMlB,GAAN,yFACNQ,EAASM,IAAT,iBAAuBd,IADjB,uBACrBe,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAU,mCAAG,WAAMnB,GAAN,yFACDQ,EAASM,IAAT,iBAAuBd,EAAvB,aADC,uBAChBe,EADgB,EAChBA,KADgB,kBAEjBA,EAAKK,MAFY,2CAAH,sDAKVnB,EAAY,mCAAG,WAAMD,GAAN,yFACHQ,EAASM,IAAT,iBAAuBd,EAAvB,aADG,uBAClBe,EADkB,EAClBA,KADkB,kBAEnBA,EAAKM,SAFc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const details = async id => {\n      setLoading(true);\n      try {\n        const { reviews } = await fetchReviews(id);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <h1>Reviews of the movie!</h1>\n      {reviews.map(({ id, author, content }) => (\n        <div key={id}>\n          <h2>{author}</h2>\n          <p>{content}</p>\n        </div>\n      ))}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","loading","setLoading","reviews","setReviews","movieId","useParams","useEffect","details","id","fetchReviews","console","log","message","map","author","content","instance","axios","baseURL","params","api_key","fetchTrendMovies","get","data","fetchSerchMovies","query","fetchAllDetails","fetchActor","cast","results"],"sourceRoot":""}