{"version":3,"file":"static/js/170.5ad78255.chunk.js","mappings":"4LAEaA,EAAS,kBACpB,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,UACV,cAAY,SACZC,QAAQ,cARU,C,6JCATC,EAASC,EAAAA,OAAAA,OAAH,+lBAeb,IA+BOC,EAAUD,EAAAA,OAAAA,QAAH,sBAEPE,EAAYF,EAAAA,OAAAA,IAAH,6LAaTG,EAAgBH,EAAAA,OAAAA,IAAH,+E,gJC/C1B,EAbiB,SAAC,GAAgC,IAA9BI,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GAEhCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKK,IAAG,UALG,mCAKH,OAAgBP,GAAeQ,IAAKT,IAC3CA,GAASA,EAAMU,UAAU,EAAG,QAHxBR,EAOZ,E,SCZYS,EAFMC,EAAQ,KAAnBhB,OAEuBiB,GAAV,+GCYrB,EAViB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,SAACH,EAAD,UACGG,EAAOC,KAAI,gBAAGf,EAAH,EAAGA,MAAOE,EAAV,EAAUA,GAAID,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAAmBD,MAAOA,EAAOC,YAAaA,EAAaC,GAAIA,GAAhDA,EADL,KAKjB,E,2BC0BD,EA7Ba,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,6FACdF,GAAW,GADG,mBAGcG,EAAAA,EAAAA,MAHd,gBAGJC,EAHI,EAGJA,QACRN,EAAUM,GAJE,gDAMZC,QAAQC,IAAI,KAAMC,SANN,yBAQZP,GAAW,GARC,4EAAH,qDAWbE,GACD,GAAE,KAGD,SAAC,KAAD,WACE,UAAC,KAAD,YACE,wBAAI,+BACHH,GAAU,SAAC,EAAD,CAAUJ,OAAQA,KAAa,SAAC1B,EAAA,EAAD,QAIjD,C,sIC/BKuC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHT,EAAgB,mCAAG,sGACPK,EAASK,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPR,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CACNK,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBG,EAAe,mCAAG,WAAMlC,GAAN,yFACNyB,EAASK,IAAT,iBAAuB9B,IADjB,uBACrB+B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/SharedLayout/SharedLayout.styled.jsx","components/HomeItem/HomeItem.jsx","components/HomeList/HomeList.styled.jsx","components/HomeList/HomeList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#3fc9ff\"\n    ariaLabel=\"loading\"\n    text-alight=\"center\"\n    content=\"Loading...\"\n  />\n);\n","import { styled } from 'styled-components';\n\nexport const Header = styled.header`\n  padding: 20px;\n  font-size: 16px;\n  display: flex;\n  justify-content: space-between;\n  background-color: #000;\n  a {\n    text-decoration: none;\n  }\n\n  nav {\n    display: flex;\n    gap: 20px;\n\n    ${\n      '' /* margin-left: auto;\n    margin-right: auto; */\n    }\n  }\n  nav > a {\n    color: #fff;\n    text-decoration: none;\n\n    font-weight: 400;\n    font-size: 16px;\n    &:hover,\n    &:focus,\n    &:active {\n      color: #3fc9ff;\n    }\n  }\n\n  span {\n    font-weight: 600;\n    font-size: 20px;\n    color: #fff;\n    cursor: pointer;\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: #3fc9ff;\n    }\n  }\n`;\n\nexport const Section = styled.section``;\n\nexport const Container = styled.div`\n  padding: 0px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1440px;\n  overflow: hidden;\n\n  h1 {\n    color: #fff;\n    font-size: 28px;\n  }\n`;\n\nexport const MoviesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomeItem = ({ title, poster_path, id }) => {\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w200';\n  const location = useLocation();\n  return (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={`${BASE_IMG}${poster_path}`} alt={title} />\n        {title && title.substring(0, 20)}\n      </Link>\n    </li>\n  );\n};\n\nexport default HomeItem;\n","const { styled } = require('styled-components');\n\nexport const ListHome = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n`;\n","import HomeItem from 'components/HomeItem/HomeItem';\nimport React from 'react';\nimport { ListHome } from './HomeList.styled';\n\nconst HomeList = ({ movies }) => {\n  return (\n    <ListHome>\n      {movies.map(({ title, id, poster_path }) => (\n        <HomeItem key={id} title={title} poster_path={poster_path} id={id} />\n      ))}\n    </ListHome>\n  );\n};\n\nexport default HomeList;\n","import HomeList from 'components/HomeList/HomeList';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Container,\n  Section,\n} from 'components/SharedLayout/SharedLayout.styled';\nimport React, { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const details = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchTrendMovies();\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        <h1>Popular movies of the day!</h1>\n        {loading ? <HomeList movies={movies} /> : <Loader />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","content","Header","styled","Section","Container","MoviesWrapper","title","poster_path","id","location","useLocation","to","state","from","src","alt","substring","ListHome","require","ul","movies","map","useState","setMovies","loading","setLoading","useEffect","details","fetchTrendMovies","results","console","log","message","instance","axios","baseURL","params","api_key","get","data","fetchSerchMovies","query","fetchAllDetails"],"sourceRoot":""}