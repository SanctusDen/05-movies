{"version":3,"file":"static/js/247.a4598541.chunk.js","mappings":"2OA6CA,UApCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,gFACdL,GAAW,GADG,mBAGWM,EAAAA,EAAAA,IAAWD,GAHtB,gBAGJR,EAHI,EAGJA,KACRC,EAAQD,GAJI,gDAMZU,QAAQC,IAAI,KAAMC,SANN,yBAQZT,GAAW,GARC,4EAAH,sDAWbI,GACD,GAAE,CAACH,KAGF,UAAC,KAAD,WACGF,IAAW,SAAC,IAAD,KACZ,wBAAI,uBACHF,GACCA,EAAKa,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACP,4BACE,gBAAKC,IAAKD,EAAQE,IAAKH,KACvB,wBAAKA,MAFGN,EADH,MAQhB,C,sLCvCKU,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBG,EAAe,mCAAG,WAAMpB,GAAN,yFACNU,EAASM,IAAT,iBAAuBhB,IADjB,uBACrBiB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfhB,EAAU,mCAAG,WAAMD,GAAN,yFACDU,EAASM,IAAT,iBAAuBhB,EAAvB,aADC,uBAChBiB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKzB,MAFY,2CAAH,sDAKV6B,EAAY,mCAAG,WAAMrB,GAAN,yFACHU,EAASM,IAAT,iBAAuBhB,EAAvB,aADG,uBAClBiB,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,SAFc,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["// import React from 'react';\n\n// import { Loader } from 'components/Loader/Loader';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActor } from 'services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const details = async id => {\n      setLoading(true);\n      try {\n        const { cast } = await fetchActor(id);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <h1>Cast of the movie!</h1>\n      {cast &&\n        cast.map(({ id, name, avatar }) => (\n          <div key={id}>\n            <img src={avatar} alt={name} />\n            <h2>{name}</h2>\n          </div>\n        ))}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","details","id","fetchActor","console","log","message","map","name","avatar","src","alt","instance","axios","baseURL","params","api_key","fetchTrendMovies","get","data","fetchSerchMovies","query","fetchAllDetails","fetchReviews","results"],"sourceRoot":""}