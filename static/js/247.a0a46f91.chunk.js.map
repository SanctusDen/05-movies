{"version":3,"file":"static/js/247.a0a46f91.chunk.js","mappings":"2OA4CA,UAnCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,gFACdL,GAAW,GADG,mBAGWM,EAAAA,EAAAA,IAAWD,GAHtB,gBAGJR,EAHI,EAGJA,KACRC,EAAQD,GAJI,gDAMZU,QAAQC,IAAI,KAAMC,SANN,yBAQZT,GAAW,GARC,4EAAH,sDAWbI,GACD,GAAE,CAACH,KAGF,UAAC,KAAD,WACGF,IAAW,SAAC,IAAD,KACZ,wBAAI,uBACHF,EAAKa,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACR,4BACE,gBAAKC,IAAKD,EAAcE,IAAKH,KAC7B,wBAAKA,MAFGN,EADF,MAQf,C,4ECxCYU,EAAS,kBACpB,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,WANQ,C,6JCATC,EAASC,EAAAA,OAAAA,OAAH,mrBAeb,IAiCOC,EAAUD,EAAAA,OAAAA,QAAH,8CAIPE,EAAYF,EAAAA,OAAAA,IAAH,6LAaTG,EAAgBH,EAAAA,OAAAA,IAAH,+E,sLC9DpBI,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBG,EAAe,mCAAG,WAAM/B,GAAN,yFACNqB,EAASM,IAAT,iBAAuB3B,IADjB,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf3B,EAAU,mCAAG,WAAMD,GAAN,yFACDqB,EAASM,IAAT,iBAAuB3B,EAAvB,aADC,uBAChB4B,EADgB,EAChBA,KADgB,kBAEjBA,EAAKpC,MAFY,2CAAH,sDAKVwC,EAAY,mCAAG,WAAMhC,GAAN,yFACHqB,EAASM,IAAT,iBAAuB3B,EAAvB,aADG,uBAClB4B,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,SAFc,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/SharedLayout/SharedLayout.styled.jsx","services/api.jsx"],"sourcesContent":["// import React from 'react';\n\n// import { Loader } from 'components/Loader/Loader';\nimport { Loader } from 'components/Loader/Loader';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActor } from 'services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const details = async id => {\n      setLoading(true);\n      try {\n        const { cast } = await fetchActor(id);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <h1>Cast of the movie!</h1>\n      {cast.map(({ id, name, profile_path }) => (\n        <div key={id}>\n          <img src={profile_path} alt={name} />\n          <h2>{name}</h2>\n        </div>\n      ))}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"100\"\n    width=\"100\"\n    radius=\"9\"\n    color=\"#3fc9ff\"\n    ariaLabel=\"loading\"\n  />\n);\n","import { styled } from 'styled-components';\n\nexport const Header = styled.header`\n  padding: 20px;\n  font-size: 16px;\n  display: flex;\n  justify-content: space-between;\n  background-color: #000;\n  a {\n    text-decoration: none;\n  }\n\n  nav {\n    display: flex;\n    gap: 20px;\n\n    ${\n      '' /* margin-left: auto;\n    margin-right: auto; */\n    }\n  }\n  nav > a {\n    color: #fff;\n    text-decoration: none;\n\n    font-weight: 400;\n    font-size: 16px;\n    &:hover,\n    &:focus,\n    &:active {\n      color: #3fc9ff;\n      transition: all 400ms ease-in-out;\n    }\n  }\n\n  span {\n    font-weight: 600;\n    font-size: 20px;\n    color: #fff;\n    cursor: pointer;\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: #3fc9ff;\n      transition: all 400ms ease-in-out;\n    }\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 20px;\n`;\n\nexport const Container = styled.div`\n  padding: 0px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1440px;\n  overflow: hidden;\n\n  h1 {\n    color: #fff;\n    font-size: 28px;\n  }\n`;\n\nexport const MoviesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","details","id","fetchActor","console","log","message","map","name","profile_path","src","alt","Loader","height","width","radius","color","ariaLabel","Header","styled","Section","Container","MoviesWrapper","instance","axios","baseURL","params","api_key","fetchTrendMovies","get","data","fetchSerchMovies","query","fetchAllDetails","fetchReviews","results"],"sourceRoot":""}