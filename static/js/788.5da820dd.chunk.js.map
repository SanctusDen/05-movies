{"version":3,"file":"static/js/788.5da820dd.chunk.js","mappings":"6LAEaA,EAAS,kBACpB,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,WANQ,C,qICATC,EAAeC,EAAAA,OAAAA,IAAH,4EAMZC,EAAmBD,EAAAA,OAAAA,GAAH,sSAiBhBE,EAAQF,EAAAA,OAAAA,MAAH,kM,6KCtBLG,GAAcH,EAAAA,EAAAA,QAAOI,EAAAA,GAAPJ,CAAH,mlBA2BXK,EAAmBL,EAAAA,OAAAA,IAAH,wC,SCe7B,EAtCkB,SAAC,GAOZ,IAAD,IANJM,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAMC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAG3C,OACE,iCACE,SAACd,EAAD,CAAae,GAAIJ,EAAIK,QAArB,SAA8B,aAC9B,4BACE,gBAAKC,IAAG,UAnBC,oCAmBD,OAAgBT,GAAeU,IAAKf,IAC3CI,GACC,iBAAMY,OAAQZ,EAAd,SAA6BA,EAAaa,QAAQ,KAElD,OAGJ,UAAClB,EAAD,YACE,wBAAKC,KACL,yBAAG,iBAAeG,MAClB,wBAAI,cACJ,uBAAIF,KACJ,wBAAI,YACJ,wBACGC,GAAUA,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,WAK/B,E,UCrBD,EAlBkB,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACnB,OACE,+BACE,UAAC,KAAD,YACE,SAAC,EAAD,CAAWA,MAAOA,KAClB,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAM9B,E,SCeD,EA7BqB,WACnB,OAA8BU,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAO,mCAAG,6FACdN,GAAW,GADG,mBAGcO,EAAAA,EAAAA,IAAgBJ,GAH9B,gBAGJK,EAHI,EAGJA,QACRN,EAAUM,GAJE,gDAMZC,QAAQC,IAAI,KAAMC,SANN,yBAQZX,GAAW,GARC,4EAAH,qDAWbM,GAZmB,CAapB,GAAE,CAACH,EAASF,KAEX,4BACE,wBAAKE,IACJJ,IAAW,SAACpC,EAAA,EAAD,KACX,SAAC,EAAD,CAAWkC,MAAOI,MAGxB,C,wLC5BKW,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOA,KAHmB,uBACtBF,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBZ,EAAe,mCAAG,WAAMZ,GAAN,yFACNiB,EAASM,IAAT,iBAAuBvB,IADjB,uBACrBwB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAU,mCAAG,WAAM3B,GAAN,yFACDiB,EAASM,IAAT,iBAAuBvB,EAAvB,aADC,uBAChBwB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKI,MAFY,2CAAH,sDAKVC,EAAY,mCAAG,WAAM7B,GAAN,yFACHiB,EAASM,IAAT,iBAAuBvB,EAAvB,aADG,uBAClBwB,EADkB,EAClBA,KADkB,kBAEnBA,EAAKX,SAFc,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/Movies/MoviesItem.styled.jsx","components/Movies/MovieItems.jsx","components/MovieList/MovieList.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"100\"\n    width=\"100\"\n    radius=\"9\"\n    color=\"#3fc9ff\"\n    ariaLabel=\"loading\"\n  />\n);\n","import { styled } from 'styled-components';\n\nexport const WrapperMovie = styled.div`\n  display: flex;\n  gap: 24px;\n  font-size: 18px;\n`;\n\nexport const WrapperMovieItem = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  a {\n    text-decoration: line-through;\n    color: #fff;\n    &:hover,\n    &:focus,\n    &:active {\n      color: #3fc9ff;\n      text-decoration: underline;\n      transition: all 400ms ease-in-out;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  box-shadow: 2px 2px 10px 0px #3fc9ff, 2px 2px 10px 0px #3fc9ff;\n  color: #fff;\n  background: inherit;\n  border-radius: 12px;\n  padding-left: 10px;\n  width: 100px;\n`;\n","import { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const LinkBtnBack = styled(Link)`\n  width: 90px;\n  display: flex;\n  justify-content: center;\n  height: 10px;\n  padding: 10px 12px;\n  align-items: center;\n  gap: 10px;\n  text-decoration: none;\n\n  background-color: inherit;\n  color: #fff;\n  border-radius: 50px;\n  border: 2px solid #3fc9ff;\n  box-shadow: 2px 2px 10px 0px #3fc9ff, 2px 2px 10px 0px #3fc9ff;\n\n  &:hover,\n  &:focus,\n  &:active {\n    transition: all 400ms ease-in-out;\n    background-color: #3fc9ff;\n    color: #000;\n    border: 2px solid #3fc9ff;\n    box-shadow: 2px 2px 10px 0px #3fc9ff, 2px 2px 10px 0px #3fc9ff;\n  }\n`;\n\nexport const MovieItemWrapper = styled.div`\n  color: #fff;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\n\nimport { LinkBtnBack, MovieItemWrapper } from './MoviesItem.styled';\n\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieItem = ({\n  title,\n  overview,\n  genres,\n  release_date,\n  vote_average,\n  poster_path,\n}) => {\n  const location = useLocation();\n\n  const ref = useRef(location.state?.from ?? '/');\n  // const { title, overview, genres, release_date, vote_average, poster_path } =\n  //   movie;\n  return (\n    <>\n      <LinkBtnBack to={ref.current}>Go back</LinkBtnBack>\n      <div>\n        <img src={`${BASE_IMG}${poster_path}`} alt={title} />\n        {vote_average ? (\n          <span rating={vote_average}>{vote_average.toFixed(1)}</span>\n        ) : (\n          ''\n        )}\n      </div>\n      <MovieItemWrapper>\n        <h2>{title}</h2>\n        <p>Release data: {release_date}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n        </ul>\n      </MovieItemWrapper>\n    </>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem from 'components/Movies/MovieItems';\nimport { Link } from 'react-router-dom';\nimport { WrapperMovie, WrapperMovieItem } from './MovieList.styled';\n\nconst MovieList = ({ movie }) => {\n  return (\n    <>\n      <WrapperMovie>\n        <MovieItem movie={movie} />\n        <WrapperMovieItem>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </WrapperMovieItem>\n      </WrapperMovie>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAllDetails } from 'services/api';\n\nconst MovieDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movies) return;\n    const details = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchAllDetails(movieId);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    details();\n  }, [movieId, movies]);\n  return (\n    <div>\n      <h1>{movieId}</h1>\n      {loading && <Loader />}\n      {<MovieList movie={movies} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e61641c86f787a123ab79c28a2fcf6ec';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchSerchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const fetchAllDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchActor = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","WrapperMovie","styled","WrapperMovieItem","Input","LinkBtnBack","Link","MovieItemWrapper","title","overview","genres","release_date","vote_average","poster_path","location","useLocation","ref","useRef","state","from","to","current","src","alt","rating","toFixed","map","id","name","movie","useState","loading","setLoading","movies","setMovies","movieId","useParams","useEffect","details","fetchAllDetails","results","console","log","message","instance","axios","baseURL","params","api_key","fetchTrendMovies","get","data","fetchSerchMovies","query","fetchActor","cast","fetchReviews"],"sourceRoot":""}